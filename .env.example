# =============================================================================
# CONFIGURACIÓN DEL SERVIDOR
# =============================================================================
PORT=3000
NODE_ENV=development

# =============================================================================
# CONFIGURACIÓN DE BASE DE DATOS
# =============================================================================
DB_HOST=localhost
DB_PORT=5432
DB_NAME=payment-s2.0
DB_USER=postgres
DB_PASS=your_database_password

# =============================================================================
# CONFIGURACIÓN JWT
# =============================================================================
JWT_SECRET=your_jwt_secret_key_here_make_it_long_and_secure
JWT_EXPIRES_IN=24h

# =============================================================================
# CONFIGURACIÓN DE LOGGING
# =============================================================================
LOG_LEVEL=debug

# =============================================================================
# CONFIGURACIÓN DE SUPER ADMINISTRADOR
# =============================================================================
SUPER_ADMIN_EMAIL=superadmin@innovatelearning.com.co
SUPER_ADMIN_PASSWORD=Innovate@202025

# =============================================================================
# CONFIGURACIÓN DEL PROVEEDOR DE PAGOS COBRE
# =============================================================================

# URL base de la API de Cobre (no cambiar)
COBRE_BASE_URL=https://api.cobre.co

# Credenciales de autenticación de Cobre
# Obtener desde el dashboard de Cobre: https://dashboard.cobre.co
COBRE_USER_ID=cli_your_user_id_here
COBRE_SECRET=your_secret_here

# ID de la cuenta de balance en Cobre
# Se obtiene automáticamente, pero puedes especificar uno específico
COBRE_BALANCE_ID=bal_your_balance_id_here

# =============================================================================
# CONFIGURACIÓN DE WEBHOOKS DE COBRE
# =============================================================================

# URL donde Cobre enviará las notificaciones de webhook
# Para desarrollo local: usar ngrok (ngrok http 3000)
# Para producción: usar tu dominio real
COBRE_WEBHOOK_URL=https://your-domain.com/webhooks/cobre

# Clave secreta para verificar la firma de los webhooks
# Debe tener entre 10 y 64 caracteres
# IMPORTANTE: Usar la misma clave que configures en Cobre
COBRE_WEBHOOK_SECRET=your_webhook_secret_key_here_min_10_chars_max_64

# =============================================================================
# CONFIGURACIÓN DE PAGOS
# =============================================================================

# Nombre de la empresa (aparece en los checkouts)
COMPANY_NAME=Innovate Learning

# URL del frontend (para redirecciones)
FRONTEND_URL=http://localhost:3000

# URL de éxito de pago (redirección después del pago)
PAYMENT_SUCCESS_URL=http://localhost:3000/payment/success

# =============================================================================
# CONFIGURACIÓN DE CORS (OPCIONAL)
# =============================================================================
# Dominios permitidos para CORS
# Para desarrollo: *
# Para producción: https://tu-dominio.com
CORS_ORIGIN=*

# =============================================================================
# CONFIGURACIÓN DE EMAIL (OPCIONAL)
# =============================================================================
# Configuración para envío de emails de confirmación
# Si no se configura, los emails se omitirán
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASS=your_email_password_or_app_password
SMTP_FROM=noreply@innovatelearning.com.co

# =============================================================================
# CONFIGURACIÓN DE RATE LIMITING OPTIMIZADA PARA ALTO VOLUMEN
# =============================================================================

# Rate limiting para creación de órdenes (por IP cada 15 minutos)
ORDER_RATE_LIMIT_MAX=100

# Rate limiting general de API (por IP cada 15 minutos)
GENERAL_RATE_LIMIT_MAX=500

# Rate limiting para webhooks (por minuto)
WEBHOOK_RATE_LIMIT_MAX=1000

# IPs de proveedores de pago conocidos (separados por comas)
# Estos IPs están exentos del rate limiting de webhooks
PAYMENT_PROVIDER_IPS=54.173.144.191

# IPs de confianza general (separados por comas)
# Estos IPs están exentos de todos los rate limits
WHITELISTED_IPS=127.0.0.1,::1

# =============================================================================
# CONFIGURACIÓN DE BASE DE DATOS OPTIMIZADA PARA ALTO VOLUMEN
# =============================================================================

# Connection Pool Settings
DB_POOL_MAX=20          # Máximo conexiones simultáneas
DB_POOL_MIN=5           # Mínimo conexiones mantenidas
DB_POOL_ACQUIRE=30000   # Timeout para adquirir conexión (ms)
DB_POOL_IDLE=10000      # Tiempo antes de cerrar conexión idle (ms)
DB_POOL_EVICT=1000      # Intervalo de limpieza de conexiones (ms)

# Database Timeouts
DB_CONNECT_TIMEOUT=60000    # Timeout de conexión (ms)
DB_ACQUIRE_TIMEOUT=60000    # Timeout para adquirir conexión (ms)
DB_QUERY_TIMEOUT=60000      # Timeout de queries (ms)

# Database Retry Configuration
DB_RETRY_MAX=3              # Número máximo de reintentos
DB_RETRY_TIMEOUT=3000       # Tiempo entre reintentos (ms)

# =============================================================================
# CONFIGURACIÓN DE TRANSACCIONES OPTIMIZADA PARA ALTO VOLUMEN
# =============================================================================

# Timeout para transacciones de webhooks (ms)
WEBHOOK_TRANSACTION_TIMEOUT=30000

# =============================================================================
# CONFIGURACIÓN DE DESARROLLO (OPCIONAL)
# =============================================================================
# Habilitar logs detallados de webhooks
WEBHOOK_DEBUG=true

# Habilitar procesamiento automático de lista de espera
# true: Procesa automáticamente cada 30 segundos
# false: Pausa el procesamiento automático (por defecto)
ENABLE_WAITLIST_PROCESSING=false

# =============================================================================
# INSTRUCCIONES DE CONFIGURACIÓN
# =============================================================================

# 1. COPIAR ESTE ARCHIVO A .env
# cp .env.example .env

# 2. CONFIGURAR CREDENCIALES DE COBRE:
# - Ir a https://dashboard.cobre.co
# - Obtener CLIENT_ID y CLIENT_SECRET
# - Configurar en las variables COBRE_CLIENT_ID y COBRE_CLIENT_SECRET

# 3. CONFIGURAR WEBHOOKS:
# - Para desarrollo: usar ngrok (ngrok http 3000)
# - Copiar la URL de ngrok a COBRE_WEBHOOK_URL
# - Generar una clave secreta para COBRE_WEBHOOK_SECRET
# - Configurar la misma clave en el dashboard de Cobre

# 4. CONFIGURAR BASE DE DATOS:
# - Crear base de datos PostgreSQL
# - Configurar credenciales en las variables DB_*

# 5. EJECUTAR SETUP:
# npm run webhook:setup    # Crear tabla de webhooks
# npm run cobre:test      # Probar conexión con Cobre
# npm run cobre:subscribe # Suscribirse a eventos (opcional, se hace automáticamente)

# 6. VERIFICAR CONFIGURACIÓN:
# npm run cobre:test      # Ejecutar todas las pruebas de conexión

# =============================================================================
# NOTAS IMPORTANTES
# =============================================================================

# - COBRE_WEBHOOK_SECRET debe ser la misma clave que configures en Cobre
# - COBRE_WEBHOOK_URL debe ser HTTPS en producción
# - El sistema se suscribe automáticamente a 'accounts.balance.credit'
# - Los webhooks se procesan de forma idempotente
# - Todos los eventos se registran en la tabla webhook_events 